# This is a basic workflow to help you get started with Actions

name: Git Actions CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Run a one-line script
        run: echo Hello Testing 1 2 3!
     
     
      - name: Just for Windows cache implementation
        uses: actions/cache@v2
        if: startsWith(runner.os, 'Windows')
        with:
            path: ~\AppData\Local\pip\Cache
            key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
            restore-keys: |
              ${{ runner.os }}-pip-
     
     
      - name: Implementing Cache for Ubuntu
        uses: actions/cache@v2
        with:
            path: ~/.cache/pip
            key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
            restore-keys: |
                ${{ runner.os }}-pip-
     
      - name: QEMU multiplatform
        uses: docker/setup-qemu-action@v1
      
      - name: Buildx
        uses: docker/setup-buildx-action@v1
        

      - name: Docker Login
        uses: docker/login-action@v1
        with:  
          username: ${{secrets.DOCKERHUB_USERNAME}}
          password: ${{secrets.DOCKERHUB_PASSWORD}}
          
      - name: Build and Push Docker image
        id: docker_id
        uses: docker/build-push-action@v2
        with:
         context: .
         file: ./Dockerfile
         builder: ${{steps.buildx.outputs.name}}
         platforms: linux/amd64,linux/arm64
         push: true
         tags: ${{ secrets.DOCKERHUB_USERNAME }}/flask_gitaction:latest
        
       
        
